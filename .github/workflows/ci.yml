name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  MYSQLCLIENT_LIB_DIR: "C:\\Program Files\\MariaDB 11.8\\lib"
  MYSQLCLIENT_VERSION: "11.8"
  LIBMYSQL_ENABLE_CLEARTEXT_PLUGIN: 1
  # 数据库连接信息
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  REDIS_URL: ${{ secrets.REDIS_URL }}

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install MariaDB
      run: choco install mariadb -y

    - name: Start MariaDB Service
      run: |
        if (!(sc query MySQL | Select-String "RUNNING")) { net start MySQL }
      
    - name: Setup MariaDB Environment
      run: |
        $env:Path += ";C:\Program Files\MariaDB 11.8\bin"
        $env:Path += ";C:\Program Files\MariaDB 11.8\lib"
        [Environment]::SetEnvironmentVariable("MYSQLCLIENT_LIB_DIR", "C:\Program Files\MariaDB 11.8\lib", "User")
        [Environment]::SetEnvironmentVariable("MYSQLCLIENT_INCLUDE_DIR", "C:\Program Files\MariaDB 11.8\include", "User")

    - name: Link libmariadb.lib to mysqlclient.lib
      run: |
        Copy-Item "C:\Program Files\MariaDB 11.8\lib\libmariadb.lib" "C:\Program Files\MariaDB 11.8\lib\mysqlclient.lib"
        
    - name: Create test database
      run: |
        mysql -u root -e "CREATE DATABASE IF NOT EXISTS test_db;"
        mysql -u root -e "CREATE USER IF NOT EXISTS 'test_user'@'localhost' IDENTIFIED BY 'test_password';"
        mysql -u root -e "GRANT ALL PRIVILEGES ON test_db.* TO 'test_user'@'localhost';"
        mysql -u root -e "FLUSH PRIVILEGES;"
        
    - name: Install latest rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        override: true
        components: rustfmt, clippy
        
    - name: Cache rust dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Copy MariaDB DLL
      run: |
        $mariadbPath = "C:\Program Files\MariaDB 11.8\lib\libmariadb.dll"
        Copy-Item $mariadbPath -Destination .
        
    - name: Check code format
      run: cargo fmt
      
    - name: Lint with clippy
      run: cargo clippy -- -D warnings
      
    - name: Run tests
      run: cargo test
      
    - name: Build
      run: cargo build --verbose 